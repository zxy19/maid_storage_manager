plugins {
    id 'idea'
    id 'java-library'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '2.0.89'
}
tasks.named('wrapper', Wrapper).configure {
    // Define wrapper values here so as to not have to always do so when updating gradlew.properties.
    // Switching this to Wrapper.DistributionType.ALL will download the full gradle sources that comes with
    // documentation attached on cursor hover of gradle classes and methods. However, this comes with increased
    // file size for Gradle. If you do switch this to ALL, run the Gradle wrapper task twice afterwards.
    // (Verify by checking gradle/wrapper/gradle-wrapper.properties to see if distributionUrl now points to `-all`)
    distributionType = Wrapper.DistributionType.BIN
}

group = mod_group_id
version = mod_version

base {
    archivesName = minecraft_version + "-" + mod_id
}


// Mojang ships Java 21 to end users starting in 1.20.5, so mods should target Java 21.
java.toolchain.languageVersion = JavaLanguageVersion.of(21)
java.withSourcesJar()

neoForge {
    // Specify the version of NeoForge to use.
    version = project.neo_version

    runs {
        client {
            client()

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        server {
            server()
            programArgument '--nogui'
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            type = "gameTestServer"
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        data {
            data()

            // example of overriding the workingDirectory set in configureEach above, uncomment if you want to use it
            // gameDirectory = project.file('run-data')

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }

        // applies to all the run configs above
        configureEach {
            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            systemProperty 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            logLevel = org.slf4j.event.Level.DEBUG
        }
    }
    mods {
        // define mod <-> source bindings
        // these are used to tell the game which sources are for which mod
        // mostly optional in a single mod project
        // but multi mod projects should define one per mod
        "${mod_id}" {
            sourceSet(sourceSets.main)
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html#sub:flat_dir_resolver
    flatDir {
        dir 'libs'
    }
    maven {
        url "https://cursemaven.com"
    }
    maven {
        // location of the maven that hosts JEI files before January 2023
        name = "Progwml6's maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        name = "IPN-Releases"
        mavenContent {
            releasesOnly()
        }
        content {
            includeGroup("org.anti_ad.mc")
            includeGroup("ca.solo-studios")
        }
        url = uri("https://maven.ipn-mod.org/releases")
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven { url = "https://maven.ithundxr.dev/snapshots" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" }
    maven { url = "https://maven.createmod.net" }
    maven { url = "https://maven.architectury.dev/" }
    maven { url = "https://maven.latvian.dev/releases" }
    maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly "curse.maven:touhou-little-maid-355044:6657437"
    runtimeOnly "curse.maven:touhou-little-maid-355044:6657437"


    compileOnly "org.anti_ad.mc:InventoryProfilesNext-neoforge-1.21:2.1.10"
    compileOnly "mezz.jei:jei-${minecraft_version}-neoforge-api:${jei_version}"
    compileOnly "mezz.jei:jei-${minecraft_version}-neoforge:${jei_version}"
    compileOnly "curse.maven:applied-energistics-2-223794:6763533"
    compileOnly "curse.maven:mouse-tweaks-60089:5637846"
    compileOnly "curse.maven:just-enough-characters-250702:6681787"
    compileOnly "dev.emi:emi-neoforge:${emi_version}:api"
    compileOnly "dev.emi:emi-neoforge:${emi_version}"
    compileOnly "curse.maven:create-328085:6641610"
    compileOnly "com.tterrag.registrate:Registrate:MC1.21-1.3.0+62"
    compileOnly "net.createmod.ponder:Ponder-NeoForge-${minecraft_version}:1.0.60"
    compileOnly "curse.maven:refined-storage-243076:6798977"
    //TACZ has not support 1.21.1
//    compileOnly "curse.maven:timeless-and-classics-zero-1028108:6632240"
    compileOnly("me.shedaniel.cloth:cloth-config-neoforge:15.0.140")
    compileOnly "mekanism:Mekanism:${mekanism_version}"// Mekanism
    compileOnly "dev.latvian.mods:kubejs-neoforge:${kubejs_version}"
    compileOnly "dev.latvian.mods:rhino-neoforge:${rhino_version}"
    compileOnly "dev.architectury:architectury-neoforge:${architectury_version}"
//    compileOnly "curse.maven:botania-225643:5594997"
    compileOnly "curse.maven:ars-nouveau-401955:6770346"
    compileOnly "curse.maven:geckolib-388172:6659026"
    compileOnly "curse.maven:jade-324717:6738687"


//    runtimeOnly "curse.maven:botania-225643:5594997"
//    runtimeOnly "curse.maven:timeless-and-classics-zero-1028108:6632240"
    runtimeOnly("mezz.jei:jei-${minecraft_version}-neoforge:${jei_version}")
    runtimeOnly "curse.maven:applied-energistics-2-223794:6763533"
    runtimeOnly "com.tterrag.registrate:Registrate:MC1.21-1.3.0+62"
    runtimeOnly "curse.maven:patchouli-306770:6164617"
    runtimeOnly "curse.maven:sophisticated-storage-619320:6759132"
    runtimeOnly "curse.maven:sophisticated-core-618298:6760141"
    runtimeOnly "curse.maven:mouse-tweaks-60089:5637846"
    runtimeOnly "curse.maven:create-328085:6641610"
    runtimeOnly "dev.emi:emi-neoforge:${emi_version}"
    runtimeOnly("me.shedaniel.cloth:cloth-config-neoforge:15.0.140")
    runtimeOnly "curse.maven:curios-309927:6529130"
    runtimeOnly "curse.maven:refined-storage-243076:6798977"
    runtimeOnly "mekanism:Mekanism:${mekanism_version}"// Mekanism
    runtimeOnly "mekanism:Mekanism:${mekanism_version}:additions"// Mekanism: Additions
    runtimeOnly "mekanism:Mekanism:${mekanism_version}:generators"// Mekanism: Generators
    runtimeOnly "mekanism:Mekanism:${mekanism_version}:tools"// Mekanism: Tools
//    runtimeOnly "dev.latvian.mods:kubejs-neoforge:${kubejs_version}"
//    runtimeOnly "dev.latvian.mods:rhino-neoforge:${rhino_version}"
//    runtimeOnly "dev.architectury:architectury-neoforge:${architectury_version}"
//    runtimeOnly "curse.maven:probejs-585406:5820894"
    runtimeOnly "curse.maven:ars-nouveau-401955:6770346"
    runtimeOnly "curse.maven:jade-324717:6738687"
    runtimeOnly "org.anti_ad.mc:InventoryProfilesNext-neoforge-1.21:2.1.10"
    runtimeOnly "org.anti_ad.mc:libIPN-neoforge-1.21:6.5.1"
    runtimeOnly "curse.maven:kotlin-for-neoforge-351264:6706911"
    runtimeOnly "curse.maven:geckolib-388172:6659026"
    runtimeOnly "curse.maven:guideme-1173950:6688687"

}


var generateModMetadata = tasks.register("generateModMetadata", ProcessResources) {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description
    ]
    inputs.properties replaceProperties
    expand replaceProperties
    from "src/main/templates"
    into "build/generated/sources/modMetadata"
}

sourceSets.main.resources.srcDir generateModMetadata
neoForge.ideSyncTask generateModMetadata

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

// IDEA no longer automatically downloads sources/javadoc jars for dependencies, so we need to explicitly enable the behavior.
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}